/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import {type JSX} from 'react'
import {useGLTF} from '@react-three/drei'
import type {GLTF} from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    left_mirror: THREE.Mesh
    right_mirror: THREE.Mesh
    cuboid: THREE.Mesh
    front_left_wheel: THREE.Mesh
    back_right_wheel: THREE.Mesh
    back_left_wheel: THREE.Mesh
    front_right_wheel: THREE.Mesh
  }
  materials: object
}

export function TruckModel(props: JSX.IntrinsicElements['group']) {
  const {nodes} = useGLTF('/models/truck.gltf') as unknown as GLTFResult
  return (
    <group {...props} dispose={null}>
      <group name="blockbench_export">
        <group>
          <group name="root">
            <group name="truck">
              <group name="body" position={[0, 0.125, 0]}>
                <group name="mirrors" position={[0, -0.125, 0]}>
                  <mesh
                    name="left_mirror"
                    castShadow
                    receiveShadow
                    geometry={nodes.left_mirror.geometry}
                    material={nodes.left_mirror.material}
                    position={[-0.625, 1.75, -1.813]}
                    rotation={[0, 0.262, 0]}
                  />
                  <mesh
                    name="right_mirror"
                    castShadow
                    receiveShadow
                    geometry={nodes.right_mirror.geometry}
                    material={nodes.right_mirror.material}
                    position={[0.625, 1.75, -1.813]}
                    rotation={[0, -0.262, 0]}
                  />
                </group>
                <mesh
                  name="cuboid"
                  castShadow
                  receiveShadow
                  geometry={nodes.cuboid.geometry}
                  material={nodes.cuboid.material}
                />
              </group>
              <group name="wheels">
                <group name="front_left_wheel_holder"  position={[-0.715, 0.125, -1.125]}>
                  <mesh
                    name="front_left_wheel"
                    castShadow
                    receiveShadow
                    geometry={nodes.front_left_wheel.geometry}
                    material={nodes.front_left_wheel.material}
                    rotation={[0, 0, Math.PI / 2]}
                  />
                </group>
                <group name="front_right_wheel_holder" position={[0.715, 0.125, -1.125]}>
                  <mesh
                    name="front_right_wheel"
                    castShadow
                    receiveShadow
                    geometry={nodes.front_right_wheel.geometry}
                    material={nodes.front_right_wheel.material}
                    rotation={[0, 0, -Math.PI / 2]}
                  />
                </group>

                <mesh
                  name="back_right_wheel"
                  castShadow
                  receiveShadow
                  geometry={nodes.back_right_wheel.geometry}
                  material={nodes.back_right_wheel.material}
                  position={[0.656, 0.125, 0.938]}
                  rotation={[0, 0, -Math.PI / 2]}
                />
                <mesh
                  name="back_left_wheel"
                  castShadow
                  receiveShadow
                  geometry={nodes.back_left_wheel.geometry}
                  material={nodes.back_left_wheel.material}
                  position={[-0.656, 0.125, 0.938]}
                  rotation={[0, 0, Math.PI / 2]}
                />
              </group>
            </group>
          </group>
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/truck.gltf')
